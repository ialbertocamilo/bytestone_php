
services:
  # Servicio de aplicación PHP Hyperf
  hyperf:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
      args:
        BUILD_ENV: ${APP_ENV:-prod}
    container_name: hyperf_app
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - APP_ENV=${APP_ENV:-prod}
      - SCAN_CACHEABLE=${SCAN_CACHEABLE:-true}
      - WATCH_ENABLE=${WATCH_ENABLE:-false}
      - WATCH_DIR=${WATCH_DIR:-app,config}
      - WATCH_EXT=${WATCH_EXT:-php,env}
      - WATCH_DELAY=${WATCH_DELAY:-0.5}
    volumes:
      - ${APP_CODE_PATH_HOST:-./}:${APP_CODE_PATH_CONTAINER:-/var/www/html}:${APP_CODE_CONTAINER_FLAG:-cached}
      - ./storage/logs:/var/www/html/runtime/logs
    ports:
      - "${APP_PORT:-9501}:9501"
    depends_on:
      - mysql
      - redis
    networks:
      - hyperf-net
    command: ${HYPERF_COMMAND:-php bin/hyperf.php start}
    # En desarrollo, usamos la opción tty para mantener la terminal interactiva
    tty: ${TTY_ENABLE:-false}

  # Servicio MySQL
  mysql:
    image: mysql:8.0
    container_name: hyperf_mysql
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-hyperf}
      - MYSQL_USER=${MYSQL_USER:-hyperf}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
    volumes:
      - ${DATA_PATH_HOST:-./storage/mysql}:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - hyperf-net

  # Servicio Redis
  redis:
    image: redis:6-alpine
    container_name: hyperf_redis
    restart: ${RESTART_POLICY:-unless-stopped}
    volumes:
      - ${REDIS_DATA_PATH_HOST:-./storage/redis}:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - hyperf-net

networks:
  hyperf-net:
    driver: bridge